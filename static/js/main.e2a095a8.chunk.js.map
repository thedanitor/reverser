{"version":3,"sources":["components/StringOutput.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["StringOutput","reversedString","Input","useState","setReversedString","stringValue","setStringValue","type","onChange","e","target","value","onClick","preventDefault","str","reversed","i","length","reverseString","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAEe,SAASA,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,eACrC,OAAO,6BAAKA,ICAC,SAASC,IACtB,MAA4CC,mBAAS,IAArD,mBAAOF,EAAP,KAAuBG,EAAvB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAcA,OACE,iCACE,sDAEE,uBACEC,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIH,EAAeG,EAAEC,OAAOC,aAG3C,uBAAOJ,KAAK,SAASI,MAAM,UAAUC,QAbrB,SAAAH,GAClBA,EAAEI,iBACFT,EAVoB,SAAAU,GAEpB,IADA,IAAIC,EAAW,GACNC,EAAIF,EAAIG,OAAS,EAAGD,GAAK,EAAGA,IACnCD,GAAYD,EAAIE,GAElB,OAAOD,EAKWG,CAAcb,OAY9B,cAACL,EAAD,CAAcC,eAAgBA,OClBrBkB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAClB,EAAD,OCMSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e2a095a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function StringOutput({ reversedString }) {\r\n  return <h2>{reversedString}</h2>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport StringOutput from \"./StringOutput\";\r\n\r\nexport default function Input() {\r\n  const [reversedString, setReversedString] = useState(\"\");\r\n  const [stringValue, setStringValue] = useState(\"\");\r\n\r\n  const reverseString = str => {\r\n    let reversed = \"\";\r\n    for (let i = str.length - 1; i >= 0; i--) {\r\n      reversed += str[i];\r\n    }\r\n    return reversed;\r\n  };\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setReversedString(reverseString(stringValue));\r\n  };\r\n  return (\r\n    <form>\r\n      <label>\r\n        Type your string:\r\n        <input\r\n          type=\"text\"\r\n          onChange={e => setStringValue(e.target.value)}\r\n        />\r\n      </label>\r\n      <input type=\"submit\" value=\"Reverse\" onClick={handleClick} />\r\n      <StringOutput reversedString={reversedString} />\r\n    </form>\r\n  );\r\n}\r\n","import './App.css';\nimport Input from \"./components/Input\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Input />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}